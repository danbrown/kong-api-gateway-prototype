version: "3.8"

networks:
  kong-net:
    name: kong-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.1.1.0/24

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    container_name: kong-database
    image: postgres:11-alpine
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 3s
      retries: 5

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    container_name: kong-migration
    image: kong:alpine
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    container_name: kong
    image: kong:alpine
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      KONG_DB_UPDATE_FREQUENCY: 1m
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
    depends_on:
      - kong-migration
    ports:
      - "8001:8001"
      - "8444:8444"
      - "80:8000"
      - "443:8443"

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga
    command: "-c prepare -a postgres -u postgresql://kong:password@kong-database:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    links:
      - kong-database
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    container_name: konga
    image: pantsel/konga
    restart: unless-stopped
    networks:
      - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
      # any string will OK for token
      TOKEN_SECRET: iu7YDcPLiZkozQXzZ9kka3Ee1Vid5ZgQ
      NODE_ENV: production
    depends_on:
      - konga-prepare
    ports:
      - "1337:1337"

  #######################################
  # SETTING UP MICRO SERVICES
  #######################################
 
  

  # Microservice: AUTH
  auth-db:
    image: 'postgres:14'
    container_name: auth-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: auth-db
    ports:
      - '5433:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.33
    
  auth-api:
    container_name: auth-api
    restart: unless-stopped
    build:
      context: ./wps-micro-auth
      dockerfile: ./Dockerfile
    ports:
      - '3003:3000'
    depends_on:
      - auth-db
    env_file:
      - ./wps-micro-auth/.env.dev
    networks:
      kong-net:
        ipv4_address: 172.1.1.23


  # Microservice: MAILER
  mailer-db:
    image: 'postgres:14'
    container_name: mailer-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: mailer-db
    ports:
      - '5434:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.34

  mailer-api:
    container_name: mailer-api
    restart: unless-stopped
    build:
      context: ./wps-micro-mailer
      dockerfile: ./Dockerfile
    ports:
      - '3004:3000'
    depends_on:
      - mailer-db
    env_file:
      - ./wps-micro-mailer/.env.dev
    networks:
      kong-net:
        ipv4_address: 172.1.1.24

  # Microservice: UPLOADER
  uploader-api:
    container_name: uploader-api
    restart: unless-stopped
    build:
      context: ./wps-micro-uploader
      dockerfile: ./Dockerfile
    ports:
      - '3005:3000'
    env_file:
      - ./wps-micro-uploader/.env.dev
    networks:
      kong-net:
        ipv4_address: 172.1.1.25

  # Microservice: PROJECTS
  projects-db:
    image: 'postgres:14'
    container_name: projects-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: projects-db
    ports:
      - '5436:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.36

  projects-api:
    container_name: projects-api
    restart: unless-stopped
    build:
      context: ./wps-micro-projects
      dockerfile: ./Dockerfile
    ports:
      - '3006:3000'
    depends_on:
      - projects-db
    env_file:
      - ./wps-micro-projects/.env.dev
    networks:
      kong-net:
        ipv4_address: 172.1.1.26

  # Microservice: BOOKS
  books-db:
    image: 'postgres:14'
    container_name: books-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: books-db
    ports:
      - '5437:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.37

  books-api:
    container_name: books-api
    restart: unless-stopped
    build:
      context: ./wps-micro-books
      dockerfile: ./Dockerfile
    ports:
      - '3007:3000'
    depends_on:
      - books-db
    env_file:
      - ./wps-micro-books/.env.dev
    networks:
      kong-net:
        ipv4_address: 172.1.1.27

  # Microservice: PAYMENTS
  payments-db:
    image: 'postgres:14'
    container_name: payments-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: payments-db
    ports:
      - '5438:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.38

  payments-api:
    container_name: payments-api
    restart: unless-stopped
    build:
      context: ./wps-micro-payments
      dockerfile: ./Dockerfile
    ports:
      - '3008:3000'
    depends_on:
      - payments-db
    env_file:
      - ./wps-micro-payments/.env.dev
    networks:
      kong-net:
        ipv4_address: 172.1.1.28

  # Microservice: ORDERS
  orders-db:
    image: 'postgres:14'
    container_name: orders-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: orders-db
    ports:
      - '5439:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.39

  # Microservice: ADMIN
  admin-db:
    image: 'postgres:14'
    container_name: admin-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: admin-db
    ports:
      - '5440:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.40

  # Microservice: POSTS
  posts-db:
    image: 'postgres:14'
    container_name: posts-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: posts-db
    ports:
      - '5441:5432'
    networks:
      kong-net:
        ipv4_address: 172.1.1.41